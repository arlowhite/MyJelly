#:kivy 1.8.0

<MyJellyGame>:

    Label:
        font_size: 20
        # FIXME Not sure why offscreen so much
        x: self.parent.x + 100
        top: self.parent.top
        text: "Click points around the bell"

    Button:
        top: root.top
        right: root.right
        font_size: '24sp'
        text: "Done"
        on_press: self.parent.on_done_pressed()


<JellySelectionScreen>:
    ActionBar:
        text: 'foo'

        #ActionPrevious:
        #ActionButton

    # TODO Gridlayout for bigger screens?
    # TODO List selection stuff instead?

    ScrollView:
        GridLayout:
            id: jelly_grid
        # TODO Increase based on screen size
            cols: 1


<JellyAnimationConstructorScreen>:
    BoxLayout:
        orientation: 'vertical'

        ActionBar:
            top: root.top
            size_hint_y: None

            ActionView:

                ActionPrevious:
                    title: 'Jelly Animator'
                    on_press: root.manager.current = 'JellySelection'

                ActionButton:
                    text: 'Outline Bell'

                ActionButton:
                    text: 'Open Bell'

                ActionButton:
                    text: 'test'
                    icon: 'atlas://data/images/defaulttheme/previous_normal'
                    #text: 'Closed Bell'



        BoxLayout:
            orientation: 'vertical'

            Carousel:
                loop: True

                size_hint_y: None
                height: cm(1)

                WrappingLabel:
                    text: "Click points around the Jelly's bell."
                    #text_size: root.width, None

                    on_texture_size: print('text size')
                WrappingLabel:
                    text: "Move points to opened bell position."
                WrappingLabel:
                    text: "(Optional) Move points to closed position."

# Could put within a scatter
# Unlock to move it around, zoom for precision, maybe later...
            AnimationConstructor:
                id: animation_constructor


<WrappingLabel@Label>:
    size_hint_y: None
    text_size: self.width, None
    height: self.texture_size[1]
    halign: 'center'
    valign: 'top'


<JellySelectButton>:

    on_release: app.open_animation_constructor(self.jelly_data)

    Label:
        text: 'Jelly IMAGE'







<ControlPoint>:
# FIXME Use cm(), mm(), dp(), sp()
    size: 24, 24
    drawn_size: 16
    hole_diam: 8

    canvas:
        StencilPush
        Ellipse:
            size: self.hole_diam, self.hole_diam
            pos: self.center_x-self.hole_diam/2, self.center_y-self.hole_diam/2

        # Makes Stencil create a hole
        StencilUse:
            func_op: 'notequal'

        Color:
            rgba: 0, 0, 0, 0.7
        Ellipse:
            size: self.drawn_size, self.drawn_size
            pos: self.center_x-self.drawn_size/2, self.center_y-self.drawn_size/2


        Color:
            rgba: 1, 1, 1, 0.9
        Ellipse:
            size: self.hole_diam + 4, self.hole_diam+4
            pos: self.center_x-self.hole_diam/2 -2, self.center_y-self.hole_diam/2-2

        # Crosshairs
        Color:
            rgba: 69/255.0, 209/255.0, 205/255.0, 0.7

        # Vertical hair
        Rectangle:
            pos: self.center_x-1, self.y -1
            size: 2, self.height + 2
        # Horizontal hair
        Rectangle:
            pos: self.x-1, self.center_y - 1
            size: self.width + 2, 2

        StencilPop

