#:kivy 1.8.0

<MyJellyGame>:

    Label:
        font_size: 20
        # FIXME Not sure why offscreen so much
        x: self.parent.x + 100
        top: self.parent.top
        text: "Click points around the bell"

    Button:
        top: root.top
        right: root.right
        font_size: '24sp'
        text: "Done"
        on_press: self.parent.on_done_pressed()


<JellySelectionScreen>:
    ActionBar:
        text: 'foo'

        #ActionPrevious:
        #ActionButton

    # TODO Gridlayout for bigger screens?
    # TODO List selection stuff instead?

    ScrollView:
        GridLayout:
            id: jelly_grid
        # TODO Increase based on screen size
            cols: 1


<JellyAnimationConstructorScreen>:
    BoxLayout:
        orientation: 'vertical'

        ActionBar:
            top: root.top
            size_hint_y: None

            ActionView:

                ActionPrevious:
                    title: 'Jelly Animator'
                    on_press: root.manager.current = 'JellySelection'

                ActionButton:
                    icon: 'atlas://data/images/defaulttheme/previous_normal'
                    #text: 'Closed Bell'
                    on_press: carousel.load_previous()
                    disabled: carousel.index == 0


                ActionButton:
                    icon: 'atlas://data/images/defaulttheme/previous_normal'
                    on_press: carousel.load_next()
                    #on_texture: self.texture.flip_horizontal()
                    #text: 'Closed Bell'
                    disabled: carousel.index == len(carousel.slides) - 1



        BoxLayout:
            orientation: 'vertical'

            FixedCarousel:
                id: carousel
                # Darkens instruction text
                #disabled: len(animation_constructor.ctrl_points) < 3
                #loop: True
                size_hint_y: None
                height: cm(1.0)

                WrappingLabel:
                    text: "Click points around the Jelly's bell."
                WrappingLabel:
                    text: "Move points to opened bell position."

                BoxLayout:
                    orientation: 'horizontal'
                    WrappingLabel:
                        text: "(Optional) Move points to closed position."

                    Switch:
                        size_hint_x: None

            FloatLayoutStencilView:

                # Top/Bottom border
                canvas.after:
                    Color:
                        rgba: 1, 1, 1, 0.7
                    Line:
                        rectangle: self.x - 1, self.y, self.width + 2, self.height

                AnimationConstructor:
                    id: animation_constructor

                    # Unlock/Lock Scatter
                    move_resize: move_resize_switch.active

# Centered in code when data changes
                    #pos: self.parent.pos
                    #center: self.parent.center

                    animation_step: carousel.index


            BoxLayout:
                size_hint_y: None

                Label:
                    text: "Move and Resize (pinch)"

                Switch:
                    id: move_resize_switch
                    size_hint_x: None

                ToggleButton:
                    text: "Animate"
                    on_state: animation_constructor.preview_animation(self.state=='down')



<AnimationConstructor>:
    # Scatter outline
#    canvas:
#        # Shows scaled bounds
#        Color:
#            rgb: 0, 0, 1
#        Line:
#            rectangle: 0, 0, self.width, self.height
#
#        Color:
#            rgba: 1,1,1,1
#
#    canvas.after:
#        # Shows natural size (no-scaling)
#        Color:
#            rgb: 1, 0, 0
#        Line:
#            rectangle: self.x, self.y, self.width, self.height

#        Color:
#            rgb: 0, 1, 0
#        Line:
#            rectangle: self.bbox[0][0], self.bbox[0][1], self.bbox[1][0], self.bbox[1][0]

    do_rotation: False
    do_translation: False
    do_scale: False

    scale_min: 0.25
    scale_max: 6.0
    # Don't let parent re-size
    size_hint: None, None
    auto_bring_to_front: False
    do_collide_after_children: False


<WrappingLabel@Label>:
    size_hint_y: None
    text_size: self.width, None
    height: self.texture_size[1]
    halign: 'center'
    # FIXME No effect
    valign: 'middle'


<JellySelectButton>:

    on_release: app.open_animation_constructor(self.jelly_data)

    Label:
        text: 'Jelly IMAGE'



<ControlPoint>:
    # For simplicity, pos is the center of the image, collide_point is not used
    # This way pos does not need to change when scaling
    natural_size: cm(1.0)
    size: cm(1.0), cm(1.0)

    Image:
    # TODO Ring a bit thin
        source: "media/images/crosshair.png"
        pos: root.x - root.width/2.0, root.y - root.height/2.0
        size: root.size
        mipmap: True  # Looks much better with mipmap

#    canvas:
#        Rectangle:
#            source: "media/images/crosshair.png"
#            pos: self.x - self.width/2.0, self.y - self.height/2.0
#            size: self.size

