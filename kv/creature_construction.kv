#:kivy 1.9.0
#:import AnimationConstructor uix.animation_constructors

<JellyDesignScreen>:
    parts_layout: parts_layout

    BoxLayout:
        orientation: 'vertical'

        ActionBar:
            id: action_bar
            size_hint_y: None

            ActionView:

                ActionPrevious:
                    title: 'Jelly Designer'
                    # FIXME Manage previous button
                    on_press: app.open_screen('JellySelectionScreen')

# TODO dropdown auto_width working?
# TODO instead a Popup with abstract icons would be better
                ActionGroup:
                    id: add_part_action_group
                    text: '+Add'
                    mode: 'spinner'

                    ActionButton:
                        text: 'Umbrella'
                        on_press: root.add_part('jelly_bell')

                    ActionButton:
                        text: 'Tentacles'
                        on_press: root.add_part('tentacles/')

                    ActionButton:
                    #manubrium?
                        text: 'Gooey body'
                        on_press: root.add_part('gooey_body')

# Not sure why tweaks is always first
                ActionButton:
                    text: 'Tweaks'
                    on_press: app.open_screen('CreatureTweakScreen', creature_id=root.creature_id)

                ActionOverflow:
                    mode: 'spinner'

                    ActionButton:
                        text: 'Delete'  # TODO Confirmation
                        on_press: root.delete_jelly()

        BoxLayout:
            id: parts_layout
            orientation: 'vertical'


<ImportImagePopup>:
    BoxLayout:
        orientation: 'vertical'
        Button:
            text: 'Import from gallery'
            size_hint_y: None
            pos_hint: {'top': 1.0}
            on_press: root.on_import_gallery()

        # take up space
        Widget:

        Button:
            text: 'Close'
            size_hint: None, None
            size: cm(3), cm(1.2)
            pos_hint: {'center_x': 0.5}
            on_press: root.dismiss()


<AnimationConstructorScreen>:
    id: screen

    BoxLayout:
        orientation: 'vertical'

        ActionBar:
            id: action_bar
#            top: root.top FIXME remove i think
            size_hint_y: None

            ActionView:

                ActionPrevious:
                    title: 'Jelly Animator'
                    # FIXME Manage previous button
                    on_press: app.open_screen('JellyDesignScreen', creature_id=root.creature_id)

                ActionButton:
                    icon: 'atlas://data/images/defaulttheme/previous_normal'
                    #text: 'Closed Bell'
#                    on_press: carousel.load_previous()
#                    disabled: carousel.index == 0


                ActionButton:
                    icon: 'atlas://data/images/defaulttheme/previous_normal'
#                    on_press: carousel.load_next()
                    #on_texture: self.texture.flip_horizontal()
                    #text: 'Closed Bell'
#                    disabled: carousel.index == len(carousel.slides) - 1



        BoxLayout:
            id: main_layout
            orientation: 'vertical'

            # LabeledSpinner will be inserted here if animation_steps

            FloatLayoutStencilView:

                # Top/Bottom border
                canvas.after:
                    Color:
                        rgba: 1, 1, 1, 0.7
                    Line:
                        rectangle: self.x - 1, self.y, self.width + 2, self.height

                AnimationConstructor:
                    id: animation_constructor

                    # Unlock/Lock Scatter
                    move_resize: move_resize_switch.active

# Centered in code when data changes
                    #pos: self.parent.pos
                    #center: self.parent.center

#                    animation_step: carousel.index

                    # On step 0 un toggle


            BoxLayout:
                size_hint_y: None

                Label:
                    text: "Move and Resize (pinch)"

                Switch:
                    id: move_resize_switch
                    size_hint_x: None

                ToggleButton:
                    id: animate_toggle
                    text: "Animate"
                    on_state: animation_constructor.preview_animation(self.state=='down')
                    # FIXME does this work, import setup_step?
                    disabled: animation_constructor.animation_step == 0


<AnimationConstructor>:
    # Scatter outline
#    canvas:
#        # Shows scaled bounds
#        Color:
#            rgb: 0, 0, 1
#        Line:
#            rectangle: 0, 0, self.width, self.height
#
#        Color:
#            rgba: 1,1,1,1
#
#    canvas.after:
#        # Shows natural size (no-scaling)
#        Color:
#            rgb: 1, 0, 0
#        Line:
#            rectangle: self.x, self.y, self.width, self.height

#        Color:
#            rgb: 0, 1, 0
#        Line:
#            rectangle: self.bbox[0][0], self.bbox[0][1], self.bbox[1][0], self.bbox[1][0]

    do_rotation: False
    do_translation: False
    do_scale: False

    scale_min: 0.25
    scale_max: 6.0
    # Don't let parent re-size
    size_hint: None, None
    auto_bring_to_front: False
    do_collide_after_children: False


<ControlPoint>:
    # For simplicity, pos is the center of the image, collide_point is not used
    # This way pos does not need to change when scaling
    natural_size: cm(1.0)
    size: cm(1.0), cm(1.0)

    canvas.before:
        # For some reason doing Color programatically isn't working...
        Color:
            rgba: 42/255.0, 113/255.0, 182/255.0, 0.8
        Line:
            width: 1.0  # dp(1) way too fat on Nexus 10, not sure why.

    Image:
    # TODO Ring a bit thin
        source: "media/images/crosshair.png"
        pos: root.x - root.width/2.0, root.y - root.height/2.0
        size: root.size
        mipmap: True  # Looks much better with mipmap

#    canvas:
#        Rectangle:
#            source: "media/images/crosshair.png"
#            pos: self.x - self.width/2.0, self.y - self.height/2.0
#            size: self.size
